############Generated By Nginx-Clojure SuspendMethodTracer 2014-05-05 ##############
#######Notice: Ingored Waving information from current configuration file : [nginx/clojure/wave/coroutine-method-db.txt, pure-clj.txt]
lazyclass:clojure/core$apply
  invoke(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;:normal

lazyclass:clojure/core$eval
  invoke(Ljava/lang/Object;)Ljava/lang/Object;:normal

lazyclass:clojure/core$flush
  invoke()Ljava/lang/Object;:normal

lazyclass:clojure/core$println
  doInvoke(Ljava/lang/Object;)Ljava/lang/Object;:normal

lazyclass:clojure/core$prn
  doInvoke(Ljava/lang/Object;)Ljava/lang/Object;:normal

lazyclass:clojure/core$with_bindings_STAR_
  doInvoke(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;:normal

fuzzyclass:clojure/core\$binding_conveyor_fn\$fn__(\d+)
  invoke()Ljava/lang/Object;:normal

fuzzyclass:clojure/core\$comp\$fn__(\d+)
  doInvoke(Ljava/lang/Object;)Ljava/lang/Object;:normal
  invoke()Ljava/lang/Object;:normal

lazyclass:clojure/lang/AFn
  applyTo(Lclojure/lang/ISeq;)Ljava/lang/Object;:normal
  applyToHelper(Lclojure/lang/IFn;Lclojure/lang/ISeq;)Ljava/lang/Object;:normal
  call()Ljava/lang/Object;:normal
  run()V:normal

fuzzyclass:clojure/lang/AFunction\$(\d+)
  doInvoke(Ljava/lang/Object;)Ljava/lang/Object;:normal

lazyclass:clojure/lang/Compiler
  eval(Ljava/lang/Object;)Ljava/lang/Object;:normal
  eval(Ljava/lang/Object;Z)Ljava/lang/Object;:normal

lazyclass:clojure/lang/MultiFn
  invoke(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;:normal

lazyclass:clojure/lang/RestFn
  applyTo(Lclojure/lang/ISeq;)Ljava/lang/Object;:normal
  invoke(Ljava/lang/Object;)Ljava/lang/Object;:normal
  invoke(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;:normal
  invoke(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;:normal
  invoke(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;:normal

lazyclass:clojure/lang/Var
  applyTo(Lclojure/lang/ISeq;)Ljava/lang/Object;:normal
  invoke(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;:normal

lazyclass:clojure/main
  main([Ljava/lang/String;)V:normal

lazyclass:clojure/main$eval_opt
  invoke(Ljava/lang/Object;)Ljava/lang/Object;:normal

lazyclass:clojure/main$initialize
  invoke(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;:normal

lazyclass:clojure/main$main
  doInvoke(Ljava/lang/Object;)Ljava/lang/Object;:normal

lazyclass:clojure/main$null_opt
  invoke(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;:normal

lazyclass:clojure/main$repl
  doInvoke(Ljava/lang/Object;)Ljava/lang/Object;:normal

lazyclass:clojure/main$repl_caught
  invoke(Ljava/lang/Object;)Ljava/lang/Object;:normal

fuzzyclass:clojure/main\$repl\$fn__(\d+)
  invoke()Ljava/lang/Object;:normal

fuzzyclass:clojure/main\$repl\$read_eval_print__(\d+)
  invoke()Ljava/lang/Object;:normal

fuzzyclass:clojure/main\$repl\$read_eval_print__(\d+)\$fn__(\d+)
  invoke()Ljava/lang/Object;:normal

lazyclass:clojure/tools/nrepl$connect
  doInvoke(Ljava/lang/Object;)Ljava/lang/Object;:normal

lazyclass:clojure/tools/nrepl$message
  invoke(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;:normal

lazyclass:clojure/tools/nrepl/ack$send_ack
  invoke(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;:normal

lazyclass:clojure/tools/nrepl/bencode$read_bencode
  invoke(Ljava/lang/Object;)Ljava/lang/Object;:normal

lazyclass:clojure/tools/nrepl/bencode$read_byte
  invokePrim(Ljava/lang/Object;)J:normal

lazyclass:clojure/tools/nrepl/bencode$read_token
  invoke(Ljava/lang/Object;)Ljava/lang/Object;:normal

lazyclass:clojure/tools/nrepl/bencode$write_netstring_STAR_
  invoke(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;:normal

fuzzyclass:clojure/tools/nrepl/bencode\$eval(\d+)\$fn__(\d+)
  invoke(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;:normal

lazyclass:clojure/tools/nrepl/middleware/interruptible_eval$evaluate
  invoke(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;:normal

fuzzyclass:clojure/tools/nrepl/middleware/interruptible_eval\$evaluate\$fn__(\d+)
  invoke()Ljava/lang/Object;:normal

fuzzyclass:clojure/tools/nrepl/middleware/interruptible_eval\$evaluate\$fn__(\d+)\$fn__(\d+)
  invoke(Ljava/lang/Object;)Ljava/lang/Object;:normal

fuzzyclass:clojure/tools/nrepl/middleware/interruptible_eval\$interruptible_eval\$fn__(\d+)
  invoke(Ljava/lang/Object;)Ljava/lang/Object;:normal

fuzzyclass:clojure/tools/nrepl/middleware/interruptible_eval\$interruptible_eval\$fn__(\d+)\$fn__(\d+)
  invoke()Ljava/lang/Object;:normal

fuzzyclass:clojure/tools/nrepl/middleware/interruptible_eval\$run_next\$fn__(\d+)
  invoke()Ljava/lang/Object;:normal

fuzzyclass:clojure/tools/nrepl/middleware/load_file\$wrap_load_file\$fn__(\d+)
  invoke(Ljava/lang/Object;)Ljava/lang/Object;:normal

fuzzyclass:clojure/tools/nrepl/middleware/pr_values\$pr_values\$fn\$reify__(\d+)
  send(Ljava/lang/Object;)Ljava/lang/Object;:normal

fuzzyclass:clojure/tools/nrepl/middleware/pr_values\$pr_values\$fn__(\d+)
  invoke(Ljava/lang/Object;)Ljava/lang/Object;:normal

lazyclass:clojure/tools/nrepl/middleware/session$register_session
  invoke(Ljava/lang/Object;)Ljava/lang/Object;:normal

fuzzyclass:clojure/tools/nrepl/middleware/session/proxy\$java/io/Writer\$(\d+)
  flush()V:normal

fuzzyclass:clojure/tools/nrepl/middleware/session\$add_stdin\$fn__(\d+)
  invoke(Ljava/lang/Object;)Ljava/lang/Object;:normal

fuzzyclass:clojure/tools/nrepl/middleware/session\$session\$fn__(\d+)
  invoke(Ljava/lang/Object;)Ljava/lang/Object;:normal

fuzzyclass:clojure/tools/nrepl/middleware/session\$session_out\$fn__(\d+)
  invoke(Ljava/lang/Object;)Ljava/lang/Object;:normal

fuzzyclass:clojure/tools/nrepl/middleware\$wrap_conj_descriptor\$fn__(\d+)
  invoke(Ljava/lang/Object;)Ljava/lang/Object;:normal

fuzzyclass:clojure/tools/nrepl/middleware\$wrap_describe\$fn__(\d+)
  invoke(Ljava/lang/Object;)Ljava/lang/Object;:normal

lazyclass:clojure/tools/nrepl/server$handle_STAR_
  invoke(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;:normal

lazyclass:clojure/tools/nrepl/server$start_server
  doInvoke(Ljava/lang/Object;)Ljava/lang/Object;:normal

fuzzyclass:clojure/tools/nrepl/server\$handle\$fn__(\d+)
  invoke()Ljava/lang/Object;:normal

lazyclass:clojure/tools/nrepl/transport/FnTransport
  send(Ljava/lang/Object;)Ljava/lang/Object;:normal

fuzzyclass:clojure/tools/nrepl/transport\$bencode\$fn__(\d+)
  invoke()Ljava/lang/Object;:normal
  invoke(Ljava/lang/Object;)Ljava/lang/Object;:normal

fuzzyclass:clojure/tools/nrepl/transport\$bencode\$fn__(\d+)\$fn__(\d+)
  invoke()Ljava/lang/Object;:normal

fuzzyclass:clojure/tools/nrepl/transport\$fn_transport\$fn__(\d+)
  invoke()Ljava/lang/Object;:normal

fuzzyclass:clojure/tools/nrepl\$client\$this__(\d+)
  invoke(Ljava/lang/Object;)Ljava/lang/Object;:normal

lazyclass:java/net/SocketInputStream
  read([BII)I:normal

lazyclass:java/util/concurrent/FutureTask
  run()V:normal

lazyclass:java/util/concurrent/ThreadPoolExecutor
  runWorker(Ljava/util/concurrent/ThreadPoolExecutor$Worker;)V:normal

lazyclass:java/util/concurrent/ThreadPoolExecutor$Worker
  run()V:normal

lazyclass:nginx/clojure/core$sub_handler
  invoke(Ljava/lang/Object;)Ljava/lang/Object;:normal

fuzzyclass:user\$eval(\d+)
  invoke()Ljava/lang/Object;:normal

lazyclass:clojure/lang/AFn
#mark from sub clojure/lang/AFunction
  applyTo(Lclojure/lang/ISeq;)Ljava/lang/Object;:just_mark
#mark from sub clojure/lang/AFunction
  invoke()Ljava/lang/Object;:just_mark
#mark from sub clojure/lang/AFunction
  invoke(Ljava/lang/Object;)Ljava/lang/Object;:just_mark
#mark from sub clojure/lang/AFunction
  invoke(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;:just_mark
#mark from sub clojure/lang/AFunction
  invoke(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;:just_mark
#mark from sub clojure/lang/AFunction
  invoke(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;:just_mark
#mark from sub clojure/lang/AFunction
  invoke(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;:just_mark

lazyclass:clojure/lang/IFn
#mark from sub clojure/lang/Var
  applyTo(Lclojure/lang/ISeq;)Ljava/lang/Object;:just_mark
#mark from sub clojure/lang/AFn
  invoke()Ljava/lang/Object;:just_mark
#mark from sub clojure/lang/AFn
  invoke(Ljava/lang/Object;)Ljava/lang/Object;:just_mark
#mark from sub clojure/lang/AFn
  invoke(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;:just_mark
#mark from sub clojure/lang/AFn
  invoke(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;:just_mark
#mark from sub clojure/lang/Var
  invoke(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;:just_mark
#mark from sub clojure/lang/AFn
  invoke(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;:just_mark

lazyclass:clojure/lang/IFn$OL
#mark from sub clojure/tools/nrepl/bencode$read_byte
  invokePrim(Ljava/lang/Object;)J:just_mark

lazyclass:clojure/lang/RestFn
#mark from sub clojure/tools/nrepl/server$start_server
  doInvoke(Ljava/lang/Object;)Ljava/lang/Object;:just_mark
#mark from sub clojure/core$with_bindings_STAR_
  doInvoke(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;:just_mark
#mark from sub clojure/core$apply
  invoke(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;:just_mark

lazyclass:clojure/tools/nrepl/transport/Transport
#mark from sub clojure/tools/nrepl/transport/FnTransport
  send(Ljava/lang/Object;)Ljava/lang/Object;:just_mark

lazyclass:java/io/FileInputStream
#mark from sub java/net/SocketInputStream
  read([BII)I:just_mark

lazyclass:java/io/InputStream
#mark from sub java/io/FileInputStream
  read([BII)I:just_mark

lazyclass:java/lang/Runnable
#mark from sub java/util/concurrent/ThreadPoolExecutor$Worker
  run()V:just_mark

lazyclass:java/util/concurrent/Callable
#mark from sub clojure/lang/IFn
  call()Ljava/lang/Object;:just_mark

lazyclass:java/util/concurrent/RunnableFuture
#mark from sub java/util/concurrent/FutureTask
  run()V:just_mark

